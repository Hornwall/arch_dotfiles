!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/hannes/.dotfiles/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
<C-P>	config/nvim/keybinds.vim	/^nnoremap <C-P> <cmd>Telescope find_files<CR>$/;"	m
<C-S>	config/nvim/keybinds.vim	/^nnoremap <C-S> <cmd>Telescope live_grep<CR>$/;"	m
<Down>	vimrc	/^nnoremap <Down> :echoe "Use j"<CR>$/;"	m
<Leader><Leader>	vimrc	/^nmap <Leader><Leader> <c-^>$/;"	m
<Leader>a	vimrc	/^map <Leader>a :call RunAllSpecs()<CR>$/;"	m
<Leader>a,	config/nvim/keybinds.vim	/^nmap <Leader>a, :Tabularize \/,\\zs<CR>$/;"	m
<Leader>a,	config/nvim/keybinds.vim	/^vmap <Leader>a, :Tabularize \/,\\zs<CR>$/;"	m
<Leader>a:	config/nvim/keybinds.vim	/^nmap <Leader>a: :Tabularize \/:\\zs<CR>$/;"	m
<Leader>a:	config/nvim/keybinds.vim	/^vmap <Leader>a: :Tabularize \/:\\zs<CR>$/;"	m
<Leader>a:	vimrc	/^nmap <Leader>a: :Tabularize \/:\\zs<CR>$/;"	m
<Leader>a:	vimrc	/^vmap <Leader>a: :Tabularize \/:\\zs<CR>$/;"	m
<Leader>a=	config/nvim/keybinds.vim	/^nmap <Leader>a= :Tabularize \/=<CR>$/;"	m
<Leader>a=	config/nvim/keybinds.vim	/^vmap <Leader>a= :Tabularize \/=<CR>$/;"	m
<Leader>a=	vimrc	/^nmap <Leader>a= :Tabularize \/=<CR>$/;"	m
<Leader>a=	vimrc	/^vmap <Leader>a= :Tabularize \/=<CR>$/;"	m
<Leader>a=>	config/nvim/keybinds.vim	/^nmap <Leader>a=> :Tabularize \/=><CR>$/;"	m
<Leader>a=>	config/nvim/keybinds.vim	/^vmap <Leader>a=> :Tabularize \/=><CR>$/;"	m
<Leader>av	vimrc	/^nmap <Leader>av :AV<CR>$/;"	m
<Leader>gbl	vimrc	/^nnoremap <Leader>gbl :Gblame<CR>$/;"	m
<Leader>gbr	vimrc	/^nnoremap <Leader>gbr :Gbrowse<CR>$/;"	m
<Leader>gc	vimrc	/^nnoremap <Leader>gc :Gcommit<CR>$/;"	m
<Leader>gd	vimrc	/^nnoremap <Leader>gd :Gdiff<CR>$/;"	m
<Leader>gl	vimrc	/^nnoremap <Leader>gl :Glog<CR>$/;"	m
<Leader>gpl	vimrc	/^nnoremap <Leader>gpl :Gpull<CR>$/;"	m
<Leader>gps	vimrc	/^nnoremap <Leader>gps :Gpush<CR>$/;"	m
<Leader>gr	vimrc	/^nnoremap <Leader>gr :Gread<CR>$/;"	m
<Leader>gs	vimrc	/^nnoremap <Leader>gs :Gstatus<CR>$/;"	m
<Leader>gw	vimrc	/^nnoremap <Leader>gw :Gwrite<CR>$/;"	m
<Leader>h	config/nvim/keybinds.vim	/^nmap <Leader>h :rightbelow split<CR> " Split window horizontal$/;"	m
<Leader>h	vimrc	/^nmap <Leader>h :rightbelow split<CR> " Split window horizontal$/;"	m
<Leader>j	config/nvim/keybinds.vim	/^nmap <Leader>j "=system('gitmoji-selector')<C-M>P$/;"	m
<Leader>l	vimrc	/^map <Leader>l :call RunLastSpec()<CR>$/;"	m
<Leader>q	vimrc	/^map <Leader>q :NERDTreeToggle<CR>$/;"	m
<Leader>s	vimrc	/^map <Leader>s :call RunNearestSpec()<CR>$/;"	m
<Leader>t	vimrc	/^map <Leader>t :call RunCurrentSpecFile()<CR>$/;"	m
<Leader>v	config/nvim/keybinds.vim	/^nmap <Leader>v :rightbelow vsplit<CR> " Split window vertically$/;"	m
<Leader>v	vimrc	/^nmap <Leader>v :rightbelow vsplit<CR> " Split window vertically$/;"	m
<Left>	vimrc	/^nnoremap <Left> :echoe "Use h"<CR>$/;"	m
<Right>	vimrc	/^nnoremap <Right> :echoe "Use l"<CR>$/;"	m
<Tab>	config/nvim/keybinds.vim	/^inoremap <Tab> <c-r>=InsertTabWrapper()<cr>$/;"	m
<Tab>	vimrc	/^inoremap <Tab> <c-r>=InsertTabWrapper()<cr>$/;"	m
<Up>	vimrc	/^nnoremap <Up> :echoe "Use k"<CR>$/;"	m
<bs>	config/nvim/keybinds.vim	/^  nmap <bs> :<c-u>TmuxNavigateLeft<cr>$/;"	m
<c-l>	config/nvim/keybinds.vim	/^  nnoremap <silent> <buffer> <c-l> :TmuxNavigateRight<cr>$/;"	m
<leader>a	config/nvim/keybinds.vim	/^nmap <silent> <leader>a :TestSuite<CR>$/;"	m
<leader>cc	config/nvim/keybinds.vim	/^nnoremap <leader>cc :e $MYVIMRC<CR>$/;"	m
<leader>cpc	config/nvim/keybinds.vim	/^nnoremap <leader>cpc :PlugClean<CR>$/;"	m
<leader>cpi	config/nvim/keybinds.vim	/^nnoremap <leader>cpi :PlugInstall<CR>$/;"	m
<leader>cpu	config/nvim/keybinds.vim	/^nnoremap <leader>cpu :PlugUpdate<CR>$/;"	m
<leader>cs	config/nvim/keybinds.vim	/^nnoremap <leader>cs :so $MYVIMRC<CR> $/;"	m
<leader>l	config/nvim/keybinds.vim	/^nmap <silent> <leader>l :TestLast<CR>$/;"	m
<leader>s	config/nvim/keybinds.vim	/^nmap <silent> <leader>s :TestNearest<CR>$/;"	m
<leader>t	config/nvim/keybinds.vim	/^nmap <silent> <leader>t :TestFile<CR>$/;"	m
<leader>w	config/nvim/keybinds.vim	/^nnoremap <silent> <leader>w :ArgWrap<CR>$/;"	m
AS_YOU_TYPE	config/ranger/commands_full.py	/^    AS_YOU_TYPE   = 't'$/;"	v	class:scout
AUTO_OPEN	config/ranger/commands_full.py	/^    AUTO_OPEN     = 'a'$/;"	v	class:scout
FILTER	config/ranger/commands_full.py	/^    FILTER        = 'f'$/;"	v	class:scout
HybridHlsHideCursor	config/nvim/colors/hybrid.vim	/^function! HybridHlsHideCursor()$/;"	f
HybridHlsShowCursor	config/nvim/colors/hybrid.vim	/^function! HybridHlsShowCursor()$/;"	f
IGNORE_CASE	config/ranger/commands_full.py	/^    IGNORE_CASE   = 'i'$/;"	v	class:scout
INVERT	config/ranger/commands_full.py	/^    INVERT        = 'v'$/;"	v	class:scout
InsertTabWrapper	config/nvim/keybinds.vim	/^function! InsertTabWrapper()$/;"	f
InsertTabWrapper	vimrc	/^function! InsertTabWrapper()$/;"	f
KEEP_OPEN	config/ranger/commands_full.py	/^    KEEP_OPEN     = 'k'$/;"	v	class:scout
LOCK=	config/i3/scripts/lock.sh	/^LOCK=()$/;"	f
MARK	config/ranger/commands_full.py	/^    MARK          = 'm'$/;"	v	class:scout
NetrwMapping	config/nvim/keybinds.vim	/^function! NetrwMapping()$/;"	f
OPEN_ON_ENTER	config/ranger/commands_full.py	/^    OPEN_ON_ENTER = 'e'$/;"	v	class:scout
PATH_RE_DQUOTED	config/ranger/commands_full.py	/^    PATH_RE_DQUOTED = re.compile(r'^setlocal\\s+path="(.*?)"')$/;"	v	class:setlocal
PATH_RE_SQUOTED	config/ranger/commands_full.py	/^    PATH_RE_SQUOTED = re.compile(r"^setlocal\\s+path='(.*?)'")$/;"	v	class:setlocal
PATH_RE_UNQUOTED	config/ranger/commands_full.py	/^    PATH_RE_UNQUOTED = re.compile(r'^path=(.*?)$')$/;"	v	class:setlocal
PERM_FILTER	config/ranger/commands_full.py	/^    PERM_FILTER   = 'p'$/;"	v	class:scout
POSITIONAL=	bin/rtags	/^POSITIONAL=()$/;"	f
SMART_CASE	config/ranger/commands_full.py	/^    SMART_CASE    = 's'$/;"	v	class:scout
SM_GLOB	config/ranger/commands_full.py	/^    SM_GLOB       = 'g'$/;"	v	class:scout
SM_LETTERSKIP	config/ranger/commands_full.py	/^    SM_LETTERSKIP = 'l'$/;"	v	class:scout
SM_REGEX	config/ranger/commands_full.py	/^    SM_REGEX      = 'r'$/;"	v	class:scout
UNMARK	config/ranger/commands_full.py	/^    UNMARK        = 'M'$/;"	v	class:scout
X	config/ranger/rifle.conf	/^ext s[wmf]c, has snes9x-gtk,X = snes9x-gtk "$1"$/;"	k
\x20              terminal	config/ranger/rifle.conf	/^ext x?html?, has w3m,               terminal = w3m "$@"$/;"	k
\x20             terminal	config/ranger/rifle.conf	/^ext x?html?, has lynx,              terminal = lynx -- "$@"$/;"	k
\x20            terminal	config/ranger/rifle.conf	/^ext x?html?, has links,             terminal = links "$@"$/;"	k
\x20           terminal	config/ranger/rifle.conf	/^ext x?html?, has elinks,            terminal = elinks "$@"$/;"	k
\x20           terminal	config/ranger/rifle.conf	/^ext x?html?, has links2,            terminal = links2 "$@"$/;"	k
\x20       pager_move  up	config/ranger/rc.conf	/^pmap  <up>        pager_move  up=1$/;"	k
\x20       taskview_move up	config/ranger/rc.conf	/^tmap <up>        taskview_move up=1$/;"	k
\x20      move right	config/ranger/rc.conf	/^map <CR>       move right=1$/;"	k
\x20      move up	config/ranger/rc.conf	/^map <UP>       move up=1$/;"	k
\x20      pager_move  down	config/ranger/rc.conf	/^pmap  <C-d>       pager_move  down=0.5  pages=True$/;"	k
\x20      pager_move  to	config/ranger/rc.conf	/^pmap  <end>       pager_move  to=-1$/;"	k
\x20      pager_move  up	config/ranger/rc.conf	/^pmap  <C-u>       pager_move  up=0.5    pages=True$/;"	k
\x20      taskview_move down	config/ranger/rc.conf	/^tmap <C-d>       taskview_move down=0.5  pages=True$/;"	k
\x20      taskview_move to	config/ranger/rc.conf	/^tmap <end>       taskview_move to=-1$/;"	k
\x20      taskview_move up	config/ranger/rc.conf	/^tmap <C-u>       taskview_move up=0.5    pages=True$/;"	k
\x20      terminal	config/ranger/rifle.conf	/^ext docx?, has catdoc,       terminal = catdoc -- "$@" | "$PAGER"$/;"	k
\x20     move to	config/ranger/rc.conf	/^map <END>      move to=-1$/;"	k
\x20     pager_move  down	config/ranger/rc.conf	/^pmap  <down>      pager_move  down=1$/;"	k
\x20     pager_move  left	config/ranger/rc.conf	/^pmap  <left>      pager_move  left=4$/;"	k
\x20     pager_move  to	config/ranger/rc.conf	/^pmap  <home>      pager_move  to=0$/;"	k
\x20     taskview_move down	config/ranger/rc.conf	/^tmap <down>      taskview_move down=1$/;"	k
\x20     taskview_move to	config/ranger/rc.conf	/^tmap <home>      taskview_move to=0$/;"	k
\x20    move down	config/ranger/rc.conf	/^map <DOWN>     move down=1$/;"	k
\x20    move left	config/ranger/rc.conf	/^map <LEFT>     move left=1$/;"	k
\x20    move to	config/ranger/rc.conf	/^map <HOME>     move to=0$/;"	k
\x20    pager_move  right	config/ranger/rc.conf	/^pmap  <right>     pager_move  right=4$/;"	k
\x20   has atool	config/ranger/rifle.conf	/^ext ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,     has atool = atool --list --each -- "$@" | "/;"	k
\x20   move right	config/ranger/rc.conf	/^map <RIGHT>    move right=1$/;"	k
\x20   pager_move  up	config/ranger/rc.conf	/^pmap  <pageup>    pager_move  up=1.0    pages=True$/;"	k
\x20   taskview_move up	config/ranger/rc.conf	/^tmap <pageup>    taskview_move up=1.0    pages=True$/;"	k
\x20  move up	config/ranger/rc.conf	/^map <PAGEUP>   move up=1     pages=True$/;"	k
\x20 label editor	config/ranger/rifle.conf	/^mime ^text,  label editor = ${VISUAL:-$EDITOR} -- "$@"$/;"	k
\x20 label pager	config/ranger/rifle.conf	/^mime ^text,  label pager  = "$PAGER" -- "$@"$/;"	k
\x20 pager_move  down	config/ranger/rc.conf	/^pmap  <pagedown>  pager_move  down=1.0  pages=True$/;"	k
\x20 taskview_move down	config/ranger/rc.conf	/^tmap <pagedown>  taskview_move down=1.0  pages=True$/;"	k
\x20X	config/ranger/rifle.conf	/^ext nes, has fceux, X         = fceux "$1"$/;"	k
\x20X	config/ranger/rifle.conf	/^ext s[wmf]c, has zsnes, X     = zsnes "$1"$/;"	k
\x20X	config/ranger/rifle.conf	/^label wallpaper, number 11, mime ^image, has feh, X = feh --bg-scale "$1"$/;"	k
\x20X	config/ranger/rifle.conf	/^label wallpaper, number 12, mime ^image, has feh, X = feh --bg-tile "$1"$/;"	k
\x20X	config/ranger/rifle.conf	/^label wallpaper, number 13, mime ^image, has feh, X = feh --bg-center "$1"$/;"	k
\x20X	config/ranger/rifle.conf	/^label wallpaper, number 14, mime ^image, has feh, X = feh --bg-fill "$1"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext                        sxc|xlsx?|xlt|xlw|gnm|gnumeric, has gnumeric,    X, flag f = gnumeric/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext                        sxc|xlsx?|xlt|xlw|gnm|gnumeric, has kspread,     X, flag f = kspread /;"	k
\x20flag f	config/ranger/rifle.conf	/^ext djvu, has atril,  X, flag f = atril -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext djvu, has evince, X, flag f = evince -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext djvu, has zathura,X, flag f = zathura -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext epub, has ebook-viewer, X, flag f = ebook-viewer -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext mobi, has ebook-viewer, X, flag f = ebook-viewer -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext pdf, has apvlv,    X, flag f = apvlv -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext pdf, has atril,    X, flag f = atril -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext pdf, has epdfview, X, flag f = epdfview -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext pdf, has evince,   X, flag f = evince -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext pdf, has llpp,     X, flag f = llpp "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext pdf, has mupdf,    X, flag f = mupdf "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext pdf, has mupdf-x11,X, flag f = mupdf-x11 "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext pdf, has okular,   X, flag f = okular -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext pdf, has qpdfview, X, flag f = qpdfview "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext pdf, has xpdf,     X, flag f = xpdf -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext pdf, has zathura,  X, flag f = zathura -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has libreoffice, X, flag f = libreoff/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has ooffice,     X, flag f = ooffice /;"	k
\x20flag f	config/ranger/rifle.conf	/^ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has soffice,     X, flag f = soffice /;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has chromium,         X, flag f = chromium -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has chromium-browser, X, flag f = chromium-browser -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has dwb,              X, flag f = dwb -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has epiphany,         X, flag f = epiphany -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has firefox,          X, flag f = firefox -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has google-chrome,    X, flag f = google-chrome -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has iceweasel,        X, flag f = iceweasel -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has jumanji,          X, flag f = jumanji -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has konqueror,        X, flag f = konqueror -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has luakit,           X, flag f = luakit -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has midori,           X, flag f = midori -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has opera,            X, flag f = opera -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has qutebrowser,      X, flag f = qutebrowser -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has seamonkey,        X, flag f = seamonkey -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has surf,             X, flag f = surf -- file:\/\/"$1"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has uzbl,             X, flag f = uzbl -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has uzbl-browser,     X, flag f = uzbl-browser -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has uzbl-core,        X, flag f = uzbl-core -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has uzbl-tabbed,      X, flag f = uzbl-tabbed -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has vimprobable,      X, flag f = vimprobable -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext x?html?, has vimprobable2,     X, flag f = vimprobable2 -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^ext xcf,                    X, flag f = gimp -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^image, has eog,       X, flag f = eog -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^image, has eom,       X, flag f = eom -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^image, has feh,       X, flag f = feh -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^image, has geeqie,    X, flag f = geeqie -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^image, has gimp,      X, flag f = gimp -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^image, has mirage,    X, flag f = mirage -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^image, has nomacs,    X, flag f = nomacs -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^image, has pqiv,      X, flag f = pqiv -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^image, has ristretto, X, flag f = ristretto "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^image, has sxiv,      X, flag f = sxiv -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^image\/svg, has display,  X, flag f = display -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^image\/svg, has inkscape, X, flag f = inkscape -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^video,       has mplayer,  X, flag f = mplayer -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^video,       has mplayer,  X, flag f = mplayer -fs -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^video,       has mplayer2, X, flag f = mplayer2 -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^video,       has mplayer2, X, flag f = mplayer2 -fs -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^video,       has mpv,      X, flag f = mpv -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^video,       has mpv,      X, flag f = mpv --fs -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^video|audio, has gmplayer, X, flag f = gmplayer -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^video|audio, has smplayer, X, flag f = smplayer "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^video|audio, has totem,    X, flag f = totem -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^video|audio, has totem,    X, flag f = totem --fullscreen -- "$@"$/;"	k
\x20flag f	config/ranger/rifle.conf	/^mime ^video|audio, has vlc,      X, flag f = vlc -- "$@"$/;"	k
\x20flat f	config/ranger/rifle.conf	/^ext pdf, has open,     X, flat f = open "$@"$/;"	k
\x20has 7z	config/ranger/rifle.conf	/^ext 7z, has 7z = 7z -p l "$@" | "$PAGER"$/;"	k
\x20has atool	config/ranger/rifle.conf	/^ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,  has atool = atool --extract --each -- "$@"$/;"	k
\x20has atool	config/ranger/rifle.conf	/^ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has atool = atool --extract --each -- "$@"$/;"	k
\x20has atool	config/ranger/rifle.conf	/^ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has atool = atool --list --each -- "$@" | "/;"	k
\x20has bzip2	config/ranger/rifle.conf	/^ext bz2, has bzip2 = for file in "$@"; do bzip2 -dk "$file"; done$/;"	k
\x20has mplayer	config/ranger/rifle.conf	/^mime ^audio|ogg$, terminal, has mplayer  = mplayer -- "$@"$/;"	k
\x20has mplayer	config/ranger/rifle.conf	/^mime ^video, terminal, !X, has mplayer   = mplayer -- "$@"$/;"	k
\x20has mplayer2	config/ranger/rifle.conf	/^mime ^audio|ogg$, terminal, has mplayer2 = mplayer2 -- "$@"$/;"	k
\x20has mplayer2	config/ranger/rifle.conf	/^mime ^video, terminal, !X, has mplayer2  = mplayer2 -- "$@"$/;"	k
\x20has mpv	config/ranger/rifle.conf	/^mime ^audio|ogg$, terminal, has mpv      = mpv -- "$@"$/;"	k
\x20has mpv	config/ranger/rifle.conf	/^mime ^video, terminal, !X, has mpv       = mpv -- "$@"$/;"	k
\x20has tar	config/ranger/rifle.conf	/^ext tar|gz|bz2|xz, has tar = for file in "$@"; do tar vvxf "$file"; done$/;"	k
\x20has tar	config/ranger/rifle.conf	/^ext tar|gz|bz2|xz, has tar = tar vvtf "$1" | "$PAGER"$/;"	k
\x20has unace	config/ranger/rifle.conf	/^ext ace, has unace = for file in "$@"; do unace e "$file"; done$/;"	k
\x20has unace	config/ranger/rifle.conf	/^ext ace, has unace = unace l "$1" | less$/;"	k
\x20has unrar	config/ranger/rifle.conf	/^ext rar, has unrar = for file in "$@"; do unrar x "$file"; done$/;"	k
\x20has unrar	config/ranger/rifle.conf	/^ext rar, has unrar = unrar l "$1" | less$/;"	k
\x20has unzip	config/ranger/rifle.conf	/^ext zip, has unzip = for file in "$@"; do unzip -d "${file%.*}" "$file"; done$/;"	k
\x20has unzip	config/ranger/rifle.conf	/^ext zip, has unzip = unzip -l "$1" | less$/;"	k
\x20has wildmidi	config/ranger/rifle.conf	/^ext midi?,        terminal, has wildmidi = wildmidi -- "$@"$/;"	k
\x20mark_files toggle	config/ranger/rc.conf	/^map <Space> mark_files toggle=True$/;"	k
\x20move down	config/ranger/rc.conf	/^map <PAGEDOWN> move down=1   pages=True$/;"	k
\x20tag_toggle tag	config/ranger/rc.conf	/^map "<any>  tag_toggle tag=%any$/;"	k
__init__	config/ranger/commands_full.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:jump_non
__init__	config/ranger/commands_full.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:rename_append
__init__	config/ranger/commands_full.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:scout
_build_regex	config/ranger/commands_full.py	/^    def _build_regex(self):$/;"	m	class:scout
_command_name	config/ranger/commands_full.py	/^    _command_name = "meta"$/;"	v	class:prompt_metadata
_console_chain	config/ranger/commands_full.py	/^    _console_chain = None$/;"	v	class:prompt_metadata
_count	config/ranger/commands_full.py	/^    def _count(self, move=False, offset=0):$/;"	m	class:scout
_exit_no_work	config/ranger/commands_full.py	/^    def _exit_no_work(self):$/;"	m	class:quit
_exit_no_work	config/ranger/commands_full.py	/^    def _exit_no_work(self):$/;"	m	class:quitall
_fill_console	config/ranger/commands_full.py	/^    def _fill_console(self, key):$/;"	m	class:prompt_metadata
_get_app_flags_mode	config/ranger/commands_full.py	/^    def _get_app_flags_mode(self, string):  # pylint: disable=too-many-branches,too-many-stateme/;"	m	class:open_with
_is_app	config/ranger/commands_full.py	/^    def _is_app(self, arg):$/;"	m	class:open_with
_is_flags	config/ranger/commands_full.py	/^    def _is_flags(arg):$/;"	m	class:open_with
_is_mode	config/ranger/commands_full.py	/^    def _is_mode(arg):$/;"	m	class:open_with
_non	config/ranger/commands_full.py	/^    def _non(fobj, is_directory):$/;"	m	class:jump_non
_process_command_stack	config/ranger/commands_full.py	/^    def _process_command_stack(self):$/;"	m	class:prompt_metadata
_question_callback	config/ranger/commands_full.py	/^    def _question_callback(self, files, answer):$/;"	m	class:delete
_re_shift	config/ranger/commands_full.py	/^    def _re_shift(self, match):$/;"	m	class:setlocal
_tab_args	config/ranger/commands_full.py	/^    def _tab_args(self):$/;"	m	class:cd
_tab_fuzzy	config/ranger/commands_full.py	/^    def _tab_fuzzy(self, dest, dest_abs):$/;"	m	class:cd
_tab_fuzzy_match	config/ranger/commands_full.py	/^    def _tab_fuzzy_match(self, basepath, tokens):$/;"	m	class:cd
_tab_match	config/ranger/commands_full.py	/^    def _tab_match(self, path_user, path_file):$/;"	m	class:cd
_tab_normal	config/ranger/commands_full.py	/^    def _tab_normal(self, dest, dest_abs):$/;"	m	class:cd
_tab_paths	config/ranger/commands_full.py	/^    def _tab_paths(dest, dest_abs, ends_with_sep):$/;"	m	class:cd
alias	config/ranger/commands_full.py	/^class alias(Command):$/;"	c
allow_abbrev	config/ranger/commands_full.py	/^    allow_abbrev = False$/;"	v	class:delete
allow_abbrev	config/ranger/commands_full.py	/^    allow_abbrev = False$/;"	v	class:quit_bang
allow_abbrev	config/ranger/commands_full.py	/^    allow_abbrev = False$/;"	v	class:quitall_bang
arch_dotfiles	README.md	/^# arch_dotfiles/;"	c
backend	compton.conf	/^backend = "glx";$/;"	k
backward	config/ranger/rc.conf	/^cmap <A-d>        eval fm.ui.console.delete_word(backward=False)$/;"	k
bind	tmux.conf	/^bind = select-layout even-horizontal$/;"	k
build_banner	config/polybar/scripts/player_status.rb	/^def build_banner$/;"	f
bulkrename	config/ranger/commands_full.py	/^class bulkrename(Command):$/;"	c
callback	config/ranger/commands_full.py	/^        def callback(answer):$/;"	f	member:help_.execute	file:
cancel	config/ranger/commands_full.py	/^    def cancel(self):$/;"	m	class:scout
capability	config/i3blocks/modules/volume	/^capability() { # Return "Capture" if the device is a capture device$/;"	f
cd	config/ranger/commands_full.py	/^class cd(Command):$/;"	c
chain	config/ranger/commands_full.py	/^class chain(Command):$/;"	c
chmod	config/ranger/commands_full.py	/^class chmod(Command):$/;"	c
clipboards	config/ranger/commands_full.py	/^        def clipboards():$/;"	f	member:yank.execute	file:
cmap	config/ranger/commands_full.py	/^class cmap(map_):$/;"	c
colors_name	vim/colors/hybrid.vim	/^let colors_name = "hybrid"$/;"	v
console	config/ranger/commands_full.py	/^class console(Command):$/;"	c
context	config/ranger/commands_full.py	/^    context = 'browser'$/;"	v	class:alias
context	config/ranger/commands_full.py	/^    context = 'browser'$/;"	v	class:copymap
context	config/ranger/commands_full.py	/^    context = 'browser'$/;"	v	class:cunmap
context	config/ranger/commands_full.py	/^    context = 'browser'$/;"	v	class:map_
context	config/ranger/commands_full.py	/^    context = 'browser'$/;"	v	class:unmap
context	config/ranger/commands_full.py	/^    context = 'console'$/;"	v	class:cmap
context	config/ranger/commands_full.py	/^    context = 'console'$/;"	v	class:copycmap
context	config/ranger/commands_full.py	/^    context = 'pager'$/;"	v	class:copypmap
context	config/ranger/commands_full.py	/^    context = 'pager'$/;"	v	class:pmap
context	config/ranger/commands_full.py	/^    context = 'pager'$/;"	v	class:punmap
context	config/ranger/commands_full.py	/^    context = 'taskview'$/;"	v	class:copytmap
context	config/ranger/commands_full.py	/^    context = 'taskview'$/;"	v	class:tmap
context	config/ranger/commands_full.py	/^    context = 'taskview'$/;"	v	class:tunmap
copy_buffer_filename	config/ranger/commands_full.py	/^    copy_buffer_filename = 'copy_buffer'$/;"	v	class:load_copy_buffer
copy_buffer_filename	config/ranger/commands_full.py	/^    copy_buffer_filename = 'copy_buffer'$/;"	v	class:save_copy_buffer
copycmap	config/ranger/commands_full.py	/^class copycmap(copymap):$/;"	c
copymap	config/ranger/commands_full.py	/^class copymap(Command):$/;"	c
copypmap	config/ranger/commands_full.py	/^class copypmap(copymap):$/;"	c
copytmap	config/ranger/commands_full.py	/^class copytmap(copymap):$/;"	c
cunmap	config/ranger/commands_full.py	/^class cunmap(unmap):$/;"	c
datamosh	config/i3/scripts/lock.sh	/^function datamosh() {$/;"	f
default_linemode	config/ranger/commands_full.py	/^class default_linemode(Command):$/;"	c
default_value_completer	config/ranger/commands_full.py	/^            def default_value_completer():$/;"	f	member:set_.tab	file:
delete	config/ranger/commands_full.py	/^class delete(Command):$/;"	c
dirarg	config/ranger/rc.conf	/^map dG  eval fm.cut(dirarg=dict(to=-1), narg=quantifier)$/;"	k
dirarg	config/ranger/rc.conf	/^map dgg eval fm.cut(dirarg=dict(to=0), narg=quantifier)$/;"	k
dirarg	config/ranger/rc.conf	/^map dj  eval fm.cut(dirarg=dict(down=1), narg=quantifier)$/;"	k
dirarg	config/ranger/rc.conf	/^map dk  eval fm.cut(dirarg=dict(up=1), narg=quantifier)$/;"	k
dirarg	config/ranger/rc.conf	/^map yG  eval fm.copy(dirarg=dict(to=-1), narg=quantifier)$/;"	k
dirarg	config/ranger/rc.conf	/^map ygg eval fm.copy(dirarg=dict(to=0), narg=quantifier)$/;"	k
dirarg	config/ranger/rc.conf	/^map yj  eval fm.copy(dirarg=dict(down=1), narg=quantifier)$/;"	k
dirarg	config/ranger/rc.conf	/^map yk  eval fm.copy(dirarg=dict(up=1), narg=quantifier)$/;"	k
do_mark	config/ranger/commands_full.py	/^    do_mark = False$/;"	v	class:unmark_tag
do_mark	config/ranger/commands_full.py	/^    do_mark = True$/;"	v	class:mark_tag
echo	config/ranger/commands_full.py	/^class echo(Command):$/;"	c
edit	config/ranger/commands_full.py	/^class edit(Command):$/;"	c
esc	config/ranger/commands_full.py	/^        from ranger.ext.shell_escape import shell_escape as esc$/;"	x	member:bulkrename.execute	file:	nameref:unknown:shell_escape
escape_macros_for_shell	config/ranger/commands_full.py	/^    escape_macros_for_shell = True$/;"	v	class:delete
escape_macros_for_shell	config/ranger/commands_full.py	/^    escape_macros_for_shell = True$/;"	v	class:shell
eval_	config/ranger/commands_full.py	/^class eval_(Command):$/;"	c
executable	config/ranger/rifle.conf	/^mime application\/x-executable = "$1"$/;"	k
execute	config/ranger/commands.py	/^    def execute(self):$/;"	m	class:my_edit
execute	config/ranger/commands_full.py	/^    def execute(self):  # pylint: disable=too-many-branches$/;"	m	class:scout
execute	config/ranger/commands_full.py	/^    def execute(self):  # pylint: disable=too-many-locals,too-many-statements$/;"	m	class:bulkrename
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:alias
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:cd
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:chain
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:chmod
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:console
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:copymap
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:default_linemode
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:delete
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:echo
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:edit
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:eval_
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:filter_inode_type
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:flat
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:grep
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:help_
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:jump_non
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:linemode
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:load_copy_buffer
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:map_
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:mark_tag
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:meta
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:mkdir
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:narrow
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:open_with
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:prompt_metadata
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:quit
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:quit_bang
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:quitall
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:quitall_bang
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:relink
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:rename
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:rename_append
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:save_copy_buffer
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:set_
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:setintag
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:setlocal
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:shell
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:stage
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:terminal
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:touch
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:unmap
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:unstage
execute	config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:yank
ext 1	config/ranger/rifle.conf	/^ext 1                         = man "$1"$/;"	k
ext exe	config/ranger/rifle.conf	/^ext exe                       = wine "$1"$/;"	k
ext js	config/ranger/rifle.conf	/^ext js  = node -- "$1"$/;"	k
ext php	config/ranger/rifle.conf	/^ext php = php -- "$1"$/;"	k
ext pl	config/ranger/rifle.conf	/^ext pl  = perl -- "$1"$/;"	k
ext py	config/ranger/rifle.conf	/^ext py  = python -- "$1"$/;"	k
ext rb	config/ranger/rifle.conf	/^ext rb  = ruby -- "$1"$/;"	k
ext sh	config/ranger/rifle.conf	/^ext sh  = sh -- "$1"$/;"	k
fence	compton.conf	/^xrender-sync-fence = "true";$/;"	k
filter_inode_type	config/ranger/commands_full.py	/^class filter_inode_type(Command):$/;"	c
flat	config/ranger/commands_full.py	/^class flat(Command):$/;"	c
format	config/i3blocks/modules/volume	/^format() {$/;"	f
g:airline#extensions#ale#enabled	config/nvim/airline.vim	/^let g:airline#extensions#ale#enabled = 0$/;"	v
g:airline#extensions#hunks#enabled	config/nvim/airline.vim	/^let g:airline#extensions#hunks#enabled = 0$/;"	v
g:airline#extensions#obsession#enabled	config/nvim/airline.vim	/^let g:airline#extensions#obsession#enabled = 0$/;"	v
g:airline#extensions#tabline#buffer_min_count	config/nvim/airline.vim	/^let g:airline#extensions#tabline#buffer_min_count = 2$/;"	v
g:airline#extensions#tabline#enabled	config/nvim/airline.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#tabline#show_buffers	config/nvim/airline.vim	/^let g:airline#extensions#tabline#show_buffers = 0$/;"	v
g:airline#extensions#tabline#show_splits	config/nvim/airline.vim	/^let g:airline#extensions#tabline#show_splits = 0$/;"	v
g:airline_powerline_fonts	config/nvim/airline.vim	/^let g:airline_powerline_fonts = 1$/;"	v
g:airline_section_x	config/nvim/airline.vim	/^let g:airline_section_x = ''$/;"	v
g:airline_section_y	config/nvim/airline.vim	/^let g:airline_section_y = ''$/;"	v
g:airline_section_z	config/nvim/airline.vim	/^let g:airline_section_z = airline#section#create(['linenr', 'maxlinenr'])$/;"	v
g:airline_skip_empty_sections	config/nvim/airline.vim	/^let g:airline_skip_empty_sections = 1$/;"	v
g:airline_symbols	config/nvim/airline.vim	/^let g:airline_symbols.linenr = ''$/;"	v
g:airline_symbols	config/nvim/airline.vim	/^let g:airline_symbols.maxlinenr = ''$/;"	v
g:airline_symbols	config/nvim/airline.vim	/^let g:airline_symbols.whitespace = ''$/;"	v
g:colors_name	config/nvim/colors/hybrid.vim	/^let g:colors_name='hybrid'$/;"	v
g:completion_matching_strategy_list	config/nvim/plug.vim	/^let g:completion_matching_strategy_list = ['exact', 'substring', 'fuzzy']$/;"	v
g:ctrlp_use_caching	vimrc	/^let g:ctrlp_use_caching = 0$/;"	v
g:ctrlp_user_command	vimrc	/^let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'$/;"	v
g:delimitMate_expand_space	vimrc	/^let g:delimitMate_expand_space = 1$/;"	v
g:deoplete#enable_at_startup	config/nvim/plug.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:deoplete#lsp#handler_enabled	config/nvim/plug.vim	/^let g:deoplete#lsp#handler_enabled = "true"$/;"	v
g:gist_clip_command	vimrc	/^let g:gist_clip_command = 'pbcopy'$/;"	v
g:gist_detect_filetype	vimrc	/^let g:gist_detect_filetype = 1$/;"	v
g:gitgutter_override_sign_column_highlight	config/nvim/colors/hybrid.vim	/^  let g:gitgutter_override_sign_column_highlight = 0$/;"	v
g:gutentags_ctags_executable_javascript	config/nvim/plug.vim	/^let g:gutentags_ctags_executable_javascript = 'ctags'$/;"	v
g:gutentags_ctags_executable_ruby	config/nvim/plug.vim	/^let g:gutentags_ctags_executable_ruby = 'rtags'$/;"	v
g:gutentags_file_list_command	config/nvim/plug.vim	/^let g:gutentags_file_list_command = 'rg --files --ignore-file=.tagignore'$/;"	v
g:hybrid_bold	config/nvim/colors/hybrid.vim	/^  let g:hybrid_bold=1$/;"	v
g:hybrid_contrast_dark	config/nvim/colors/hybrid.vim	/^  let g:hybrid_contrast_dark='medium'$/;"	v
g:hybrid_contrast_light	config/nvim/colors/hybrid.vim	/^  let g:hybrid_contrast_light='medium'$/;"	v
g:hybrid_guisp_fallback	config/nvim/colors/hybrid.vim	/^  let g:hybrid_guisp_fallback='NONE'$/;"	v
g:hybrid_improved_strings	config/nvim/colors/hybrid.vim	/^  let g:hybrid_improved_strings=0$/;"	v
g:hybrid_improved_warnings	config/nvim/colors/hybrid.vim	/^  let g:hybrid_improved_warnings=0$/;"	v
g:hybrid_inverse	config/nvim/colors/hybrid.vim	/^  let g:hybrid_inverse=1$/;"	v
g:hybrid_italic	config/nvim/colors/hybrid.vim	/^    let g:hybrid_italic=0$/;"	v
g:hybrid_italic	config/nvim/colors/hybrid.vim	/^    let g:hybrid_italic=1$/;"	v
g:hybrid_termcolors	config/nvim/colors/hybrid.vim	/^  let g:hybrid_termcolors=256$/;"	v
g:hybrid_transparent	config/nvim/colors/hybrid.vim	/^  let g:hybrid_transparent=0$/;"	v
g:hybrid_undercurl	config/nvim/colors/hybrid.vim	/^  let g:hybrid_undercurl=1$/;"	v
g:hybrid_underline	config/nvim/colors/hybrid.vim	/^  let g:hybrid_underline=1$/;"	v
g:hybrid_use_Xresources	vim/colors/hybrid.vim	/^  let g:hybrid_use_Xresources = 0$/;"	v
g:hybrid_use_iTerm_colors	vim/colors/hybrid.vim	/^  let g:hybrid_use_iTerm_colors = 0$/;"	v
g:hybrid_use_iTerm_colors	vimrc	/^let g:hybrid_use_iTerm_colors = 1$/;"	v
g:indentLine_color_gui	config/nvim/colors/hybrid.vim	/^  let g:indentLine_color_gui = s:bg2[0]$/;"	v
g:indentLine_color_term	config/nvim/colors/hybrid.vim	/^  let g:indentLine_color_term = s:bg2[1]$/;"	v
g:indent_guides_auto_colors	config/nvim/colors/hybrid.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_auto_colors	vimrc	/^let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_enable_on_vim_startup	vimrc	/^let g:indent_guides_enable_on_vim_startup = 1$/;"	v
g:niji_dark_colours	config/nvim/colors/hybrid.vim	/^let g:niji_dark_colours = g:rbpt_colorpairs$/;"	v
g:niji_light_colours	config/nvim/colors/hybrid.vim	/^let g:niji_light_colours = g:rbpt_colorpairs$/;"	v
g:rainbow_conf	config/nvim/colors/hybrid.vim	/^   let g:rainbow_conf = {}$/;"	v
g:rainbow_conf	config/nvim/colors/hybrid.vim	/^   let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs$/;"	v
g:rainbow_conf	config/nvim/colors/hybrid.vim	/^   let g:rainbow_conf['guifgs'] = g:rainbow_guifgs$/;"	v
g:rainbow_ctermfgs	config/nvim/colors/hybrid.vim	/^let g:rainbow_ctermfgs = [ '166', 'red', 'magenta', 'blue' ]$/;"	v
g:rainbow_guifgs	config/nvim/colors/hybrid.vim	/^let g:rainbow_guifgs = [ '#d65d0e', '#cc241d', '#b16286', '#458588' ]$/;"	v
g:rbpt_colorpairs	config/nvim/colors/hybrid.vim	/^  let g:rbpt_colorpairs =$/;"	v
g:rspec_command	vimrc	/^let g:rspec_command = "Dispatch bundle exec rspec {spec} -f progress"$/;"	v
g:syntastic_always_populate_loc_list	vimrc	/^let g:syntastic_always_populate_loc_list = 1$/;"	v
g:syntastic_auto_loc_list	vimrc	/^let g:syntastic_auto_loc_list = 2$/;"	v
g:syntastic_enable_signs	vimrc	/^let g:syntastic_enable_signs = 1$/;"	v
g:terminal_color_0	config/nvim/colors/hybrid.vim	/^  let g:terminal_color_0 = s:bg0[0]$/;"	v
g:terminal_color_1	config/nvim/colors/hybrid.vim	/^  let g:terminal_color_1 = s:gb.neutral_red[0]$/;"	v
g:terminal_color_10	config/nvim/colors/hybrid.vim	/^  let g:terminal_color_10 = s:green[0]$/;"	v
g:terminal_color_11	config/nvim/colors/hybrid.vim	/^  let g:terminal_color_11 = s:yellow[0]$/;"	v
g:terminal_color_12	config/nvim/colors/hybrid.vim	/^  let g:terminal_color_12 = s:blue[0]$/;"	v
g:terminal_color_13	config/nvim/colors/hybrid.vim	/^  let g:terminal_color_13 = s:purple[0]$/;"	v
g:terminal_color_14	config/nvim/colors/hybrid.vim	/^  let g:terminal_color_14 = s:aqua[0]$/;"	v
g:terminal_color_15	config/nvim/colors/hybrid.vim	/^  let g:terminal_color_15 = s:fg1[0]$/;"	v
g:terminal_color_2	config/nvim/colors/hybrid.vim	/^  let g:terminal_color_2 = s:gb.neutral_green[0]$/;"	v
g:terminal_color_3	config/nvim/colors/hybrid.vim	/^  let g:terminal_color_3 = s:gb.neutral_yellow[0]$/;"	v
g:terminal_color_4	config/nvim/colors/hybrid.vim	/^  let g:terminal_color_4 = s:gb.neutral_blue[0]$/;"	v
g:terminal_color_5	config/nvim/colors/hybrid.vim	/^  let g:terminal_color_5 = s:gb.neutral_purple[0]$/;"	v
g:terminal_color_6	config/nvim/colors/hybrid.vim	/^  let g:terminal_color_6 = s:gb.neutral_aqua[0]$/;"	v
g:terminal_color_7	config/nvim/colors/hybrid.vim	/^  let g:terminal_color_7 = s:fg4[0]$/;"	v
g:terminal_color_8	config/nvim/colors/hybrid.vim	/^  let g:terminal_color_8 = s:gray[0]$/;"	v
g:terminal_color_9	config/nvim/colors/hybrid.vim	/^  let g:terminal_color_9 = s:red[0]$/;"	v
g:test#strategy	config/nvim/plug.vim	/^let g:test#strategy = "neovim"$/;"	v
g:vimshell_escape_colors	config/nvim/colors/hybrid.vim	/^let g:vimshell_escape_colors = [$/;"	v
get_selection_attr	config/ranger/commands_full.py	/^    def get_selection_attr(self, attr):$/;"	m	class:yank
grep	config/ranger/commands_full.py	/^class grep(Command):$/;"	c
handle_extension	config/ranger/scope.sh	/^handle_extension() {$/;"	f
handle_fallback	config/ranger/scope.sh	/^handle_fallback() {$/;"	f
handle_image	config/ranger/scope.sh	/^handle_image() {$/;"	f
handle_mime	config/ranger/scope.sh	/^handle_mime() {$/;"	f
help_	config/ranger/commands_full.py	/^class help_(Command):$/;"	c
hybrid_transparent	config/nvim/theming.vim	/^let hybrid_transparent = 1$/;"	v
is_directory_with_files	config/ranger/commands_full.py	/^        def is_directory_with_files(path):$/;"	f	member:delete.execute	file:
jump_non	config/ranger/commands_full.py	/^class jump_non(Command):$/;"	c
left	config/ranger/rc.conf	/^cmap <a-left>   eval fm.ui.console.move_word(left=1)$/;"	k
left	config/ranger/rc.conf	/^cmap <left>  eval fm.ui.console.move(left=1)$/;"	k
linemode	config/ranger/commands_full.py	/^class linemode(default_linemode):$/;"	c
load_copy_buffer	config/ranger/commands_full.py	/^class load_copy_buffer(Command):$/;"	c
map	config/ranger/rc.conf	/^map :  console$/;"	k
map	config/ranger/rc.conf	/^map =  chmod$/;"	k
map J  move down	config/ranger/rc.conf	/^map J  move down=0.5  pages=True$/;"	k
map K  move up	config/ranger/rc.conf	/^map K  move up=0.5    pages=True$/;"	k
map N  search_next forward	config/ranger/rc.conf	/^map N  search_next forward=False$/;"	k
map ca search_next order	config/ranger/rc.conf	/^map ca search_next order=atime$/;"	k
map cc search_next order	config/ranger/rc.conf	/^map cc search_next order=ctime$/;"	k
map ci search_next order	config/ranger/rc.conf	/^map ci search_next order=mimetype$/;"	k
map cm search_next order	config/ranger/rc.conf	/^map cm search_next order=mtime$/;"	k
map cs search_next order	config/ranger/rc.conf	/^map cs search_next order=size$/;"	k
map ct search_next order	config/ranger/rc.conf	/^map ct search_next order=tag$/;"	k
map da cut mode	config/ranger/rc.conf	/^map da cut mode=add$/;"	k
map dr cut mode	config/ranger/rc.conf	/^map dr cut mode=remove$/;"	k
map dt cut mode	config/ranger/rc.conf	/^map dt cut mode=toggle$/;"	k
map oA chain set sort	config/ranger/rc.conf	/^map oA chain set sort=atime;     set sort_reverse=True$/;"	k
map oB chain set sort	config/ranger/rc.conf	/^map oB chain set sort=basename;  set sort_reverse=True$/;"	k
map oC chain set sort	config/ranger/rc.conf	/^map oC chain set sort=ctime;     set sort_reverse=True$/;"	k
map oE chain set sort	config/ranger/rc.conf	/^map oE chain set sort=extension; set sort_reverse=True$/;"	k
map oM chain set sort	config/ranger/rc.conf	/^map oM chain set sort=mtime;     set sort_reverse=True$/;"	k
map oN chain set sort	config/ranger/rc.conf	/^map oN chain set sort=natural;   set sort_reverse=True$/;"	k
map oS chain set sort	config/ranger/rc.conf	/^map oS chain set sort=size;      set sort_reverse=True$/;"	k
map oT chain set sort	config/ranger/rc.conf	/^map oT chain set sort=type;      set sort_reverse=True$/;"	k
map oa chain set sort	config/ranger/rc.conf	/^map oa chain set sort=atime;     set sort_reverse=False$/;"	k
map ob chain set sort	config/ranger/rc.conf	/^map ob chain set sort=basename;  set sort_reverse=False$/;"	k
map oc chain set sort	config/ranger/rc.conf	/^map oc chain set sort=ctime;     set sort_reverse=False$/;"	k
map oe chain set sort	config/ranger/rc.conf	/^map oe chain set sort=extension; set sort_reverse=False$/;"	k
map om chain set sort	config/ranger/rc.conf	/^map om chain set sort=mtime;     set sort_reverse=False$/;"	k
map on chain set sort	config/ranger/rc.conf	/^map on chain set sort=natural;   set sort_reverse=False$/;"	k
map os chain set sort	config/ranger/rc.conf	/^map os chain set sort=size;      set sort_reverse=False$/;"	k
map ot chain set sort	config/ranger/rc.conf	/^map ot chain set sort=type;      set sort_reverse=False$/;"	k
map oz set sort	config/ranger/rc.conf	/^map oz set sort=random$/;"	k
map pL paste_symlink relative	config/ranger/rc.conf	/^map pL paste_symlink relative=True$/;"	k
map pO paste overwrite	config/ranger/rc.conf	/^map pO paste overwrite=True append=True$/;"	k
map pP paste append	config/ranger/rc.conf	/^map pP paste append=True$/;"	k
map pl paste_symlink relative	config/ranger/rc.conf	/^map pl paste_symlink relative=False$/;"	k
map po paste overwrite	config/ranger/rc.conf	/^map po paste overwrite=True$/;"	k
map uV      toggle_visual_mode reverse	config/ranger/rc.conf	/^map uV      toggle_visual_mode reverse=True$/;"	k
map uv      mark_files all	config/ranger/rc.conf	/^map uv      mark_files all=True val=False$/;"	k
map v       mark_files all	config/ranger/rc.conf	/^map v       mark_files all=True toggle=True$/;"	k
map ya copy mode	config/ranger/rc.conf	/^map ya copy mode=add$/;"	k
map yr copy mode	config/ranger/rc.conf	/^map yr copy mode=remove$/;"	k
map yt copy mode	config/ranger/rc.conf	/^map yt copy mode=toggle$/;"	k
map_	config/ranger/commands_full.py	/^class map_(Command):$/;"	c
mapleader	config/nvim/keybinds.vim	/^let mapleader=","$/;"	v
mapleader	vimrc	/^let mapleader=","$/;"	v
mark_tag	config/ranger/commands_full.py	/^class mark_tag(Command):$/;"	c
marque	config/polybar/scripts/player_status.rb	/^def marque(banner, start, slice)$/;"	f
meta	config/ranger/commands_full.py	/^class meta(prompt_metadata):$/;"	c
method	compton.conf	/^glx-swap-method = -1;$/;"	k
mkdir	config/ranger/commands_full.py	/^class mkdir(Command):$/;"	c
modes	config/ranger/commands_full.py	/^    modes = {$/;"	v	class:yank
my_edit	config/ranger/commands.py	/^class my_edit(Command):$/;"	c
name	config/ranger/commands_full.py	/^    name = 'eval'$/;"	v	class:eval_
name	config/ranger/commands_full.py	/^    name = 'help'$/;"	v	class:help_
name	config/ranger/commands_full.py	/^    name = 'map'$/;"	v	class:map_
name	config/ranger/commands_full.py	/^    name = 'quit!'$/;"	v	class:quit_bang
name	config/ranger/commands_full.py	/^    name = 'quitall!'$/;"	v	class:quitall_bang
name	config/ranger/commands_full.py	/^    name = 'set'  # don't override the builtin set class$/;"	v	class:set_
narrow	config/ranger/commands_full.py	/^class narrow(Command):$/;"	c
netrw_mapping	config/nvim/keybinds.vim	/^augroup netrw_mapping$/;"	a
open_with	config/ranger/commands_full.py	/^class open_with(Command):$/;"	c
overlay	compton.conf	/^paint-on-overlay = true;$/;"	k
php	config/ranger/rifle.conf	/^!mime ^text, label editor, ext xml|json|csv|tex|py|pl|rb|js|sh|php = ${VISUAL:-$EDITOR} -- "$@"$/;"	k
php	config/ranger/rifle.conf	/^!mime ^text, label pager,  ext xml|json|csv|tex|py|pl|rb|js|sh|php = "$PAGER" -- "$@"$/;"	k
php	config/ranger/rifle.conf	/^label editor, !mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php  = ${VISUAL:-$EDITOR} -- "$@/;"	k
php	config/ranger/rifle.conf	/^label pager,  !mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php  = "$PAGER" -- "$@"$/;"	k
pixmap	compton.conf	/^glx-no-rebind-pixmap = true;$/;"	k
pmap	config/ranger/commands_full.py	/^class pmap(map_):$/;"	c
position	config/ranger/rc.conf	/^map I  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"), position=7/;"	k
prompt_metadata	config/ranger/commands_full.py	/^class prompt_metadata(Command):$/;"	c
punmap	config/ranger/commands_full.py	/^class punmap(unmap):$/;"	c
quick	config/ranger/commands_full.py	/^    def quick(self):$/;"	m	class:scout
quit	config/ranger/commands_full.py	/^class quit(Command):  # pylint: disable=redefined-builtin$/;"	c
quit_bang	config/ranger/commands_full.py	/^class quit_bang(Command):$/;"	c
quitall	config/ranger/commands_full.py	/^class quitall(Command):$/;"	c
quitall_bang	config/ranger/commands_full.py	/^class quitall_bang(Command):$/;"	c
relink	config/ranger/commands_full.py	/^class relink(Command):$/;"	c
rename	config/ranger/commands_full.py	/^class rename(Command):$/;"	c
rename_append	config/ranger/commands_full.py	/^class rename_append(Command):$/;"	c
resolve_macros	config/ranger/commands_full.py	/^    resolve_macros = False$/;"	v	class:alias
resolve_macros	config/ranger/commands_full.py	/^    resolve_macros = False$/;"	v	class:eval_
resolve_macros	config/ranger/commands_full.py	/^    resolve_macros = False$/;"	v	class:map_
right	config/ranger/rc.conf	/^cmap <a-right>  eval fm.ui.console.move_word(right=1)$/;"	k
right	config/ranger/rc.conf	/^cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)$/;"	k
right	config/ranger/rc.conf	/^cmap <home>  eval fm.ui.console.move(right=0, absolute=True)$/;"	k
right	config/ranger/rc.conf	/^cmap <right> eval fm.ui.console.move(right=1)$/;"	k
s:HL	config/nvim/colors/hybrid.vim	/^function! s:HL(group, fg, ...)$/;"	f
s:addbg	config/nvim/colors/hybrid.vim	/^  let s:addbg  = s:gb.add$/;"	v
s:addbg	vim/colors/hybrid.vim	/^    let s:addbg      = "10"$/;"	v
s:addbg	vim/colors/hybrid.vim	/^  let s:addbg      = "#5F875F"$/;"	v
s:addbg	vim/colors/hybrid.vim	/^  let s:addbg      = "65"$/;"	v
s:addfg	config/nvim/colors/hybrid.vim	/^  let s:addfg = ['#d7ffaf', 0]$/;"	v
s:addfg	vim/colors/hybrid.vim	/^  let s:addfg      = "#d7ffaf"$/;"	v
s:addfg	vim/colors/hybrid.vim	/^  let s:addfg      = "193"$/;"	v
s:aqua	config/nvim/colors/hybrid.vim	/^  let s:aqua   = s:gb.bright_aqua$/;"	v
s:aqua	config/nvim/colors/hybrid.vim	/^  let s:aqua   = s:gb.faded_aqua$/;"	v
s:aqua	config/nvim/colors/hybrid.vim	/^  let s:aqua[1]   = 14$/;"	v
s:aqua	vim/colors/hybrid.vim	/^    let s:aqua       = "109"$/;"	v
s:aqua	vim/colors/hybrid.vim	/^    let s:aqua       = "14"   " LightCyan$/;"	v
s:aqua	vim/colors/hybrid.vim	/^    let s:aqua       = "6"$/;"	v
s:aqua	vim/colors/hybrid.vim	/^  let s:aqua       = "#8abeb7"$/;"	v
s:b	vim/colors/hybrid.vim	/^let s:b      = ",bold"$/;"	v
s:background	vim/colors/hybrid.vim	/^    let s:background = "8"$/;"	v
s:background	vim/colors/hybrid.vim	/^  let s:background = "#1d1f21"$/;"	v
s:background	vim/colors/hybrid.vim	/^  let s:background = "234"$/;"	v
s:bg0	config/nvim/colors/hybrid.vim	/^    let s:bg0  = s:gb.dark0$/;"	v
s:bg0	config/nvim/colors/hybrid.vim	/^    let s:bg0  = s:gb.dark0_hard$/;"	v
s:bg0	config/nvim/colors/hybrid.vim	/^    let s:bg0  = s:gb.dark0_soft$/;"	v
s:bg0	config/nvim/colors/hybrid.vim	/^    let s:bg0  = s:gb.dark0_transparent$/;"	v
s:bg0	config/nvim/colors/hybrid.vim	/^    let s:bg0  = s:gb.light0_hard$/;"	v
s:bg0	config/nvim/colors/hybrid.vim	/^    let s:bg0  = s:gb.light0_soft$/;"	v
s:bg0	config/nvim/colors/hybrid.vim	/^  let s:bg0  = s:gb.light0$/;"	v
s:bg0	config/nvim/colors/hybrid.vim	/^  let s:bg0[1]    = 0$/;"	v
s:bg1	config/nvim/colors/hybrid.vim	/^  let s:bg1  = s:gb.dark1$/;"	v
s:bg1	config/nvim/colors/hybrid.vim	/^  let s:bg1  = s:gb.light1$/;"	v
s:bg2	config/nvim/colors/hybrid.vim	/^  let s:bg2  = s:gb.dark2$/;"	v
s:bg2	config/nvim/colors/hybrid.vim	/^  let s:bg2  = s:gb.light2$/;"	v
s:bg3	config/nvim/colors/hybrid.vim	/^  let s:bg3  = s:gb.dark3$/;"	v
s:bg3	config/nvim/colors/hybrid.vim	/^  let s:bg3  = s:gb.light3$/;"	v
s:bg4	config/nvim/colors/hybrid.vim	/^  let s:bg4  = s:gb.dark4$/;"	v
s:bg4	config/nvim/colors/hybrid.vim	/^  let s:bg4  = s:gb.light4$/;"	v
s:blue	config/nvim/colors/hybrid.vim	/^  let s:blue   = s:gb.bright_blue$/;"	v
s:blue	config/nvim/colors/hybrid.vim	/^  let s:blue   = s:gb.faded_blue$/;"	v
s:blue	config/nvim/colors/hybrid.vim	/^  let s:blue[1]   = 12$/;"	v
s:blue	vim/colors/hybrid.vim	/^    let s:blue       = "110"$/;"	v
s:blue	vim/colors/hybrid.vim	/^    let s:blue       = "12"   " LightBlue$/;"	v
s:blue	vim/colors/hybrid.vim	/^    let s:blue       = "4"$/;"	v
s:blue	vim/colors/hybrid.vim	/^  let s:blue       = "#81a2be"$/;"	v
s:bold	config/nvim/colors/hybrid.vim	/^  let s:bold = ''$/;"	v
s:bold	config/nvim/colors/hybrid.vim	/^let s:bold = 'bold,'$/;"	v
s:c	vim/colors/hybrid.vim	/^let s:c      = ",undercurl"$/;"	v
s:changebg	config/nvim/colors/hybrid.vim	/^  let s:changebg  = s:gb.change$/;"	v
s:changebg	vim/colors/hybrid.vim	/^    let s:changebg   = "12"$/;"	v
s:changebg	vim/colors/hybrid.vim	/^  let s:changebg   = "#5F5F87"$/;"	v
s:changebg	vim/colors/hybrid.vim	/^  let s:changebg   = "60"$/;"	v
s:changefg	config/nvim/colors/hybrid.vim	/^  let s:changefg = ['#d7d7ff', 0]$/;"	v
s:changefg	vim/colors/hybrid.vim	/^  let s:changefg   = "#d7d7ff"$/;"	v
s:changefg	vim/colors/hybrid.vim	/^  let s:changefg   = "189"$/;"	v
s:color_column	config/nvim/colors/hybrid.vim	/^  let s:color_column = get(s:gb, g:hybrid_color_column)$/;"	v
s:color_column	config/nvim/colors/hybrid.vim	/^let s:color_column = s:bg1$/;"	v
s:comment	vim/colors/hybrid.vim	/^    let s:comment    = "243"$/;"	v
s:comment	vim/colors/hybrid.vim	/^    let s:comment    = "7"    " LightGrey$/;"	v
s:comment	vim/colors/hybrid.vim	/^    let s:comment    = "7"$/;"	v
s:comment	vim/colors/hybrid.vim	/^  let s:comment    = "#707880"$/;"	v
s:darkblue	vim/colors/hybrid.vim	/^  let s:darkblue   = "#00005f"$/;"	v
s:darkblue	vim/colors/hybrid.vim	/^  let s:darkblue   = "17"$/;"	v
s:darkcolumn	vim/colors/hybrid.vim	/^    let s:darkcolumn = "11"$/;"	v
s:darkcolumn	vim/colors/hybrid.vim	/^  let s:darkcolumn = "#1c1c1c"$/;"	v
s:darkcolumn	vim/colors/hybrid.vim	/^  let s:darkcolumn = "234"$/;"	v
s:darkcyan	vim/colors/hybrid.vim	/^  let s:darkcyan   = "#005f5f"$/;"	v
s:darkcyan	vim/colors/hybrid.vim	/^  let s:darkcyan   = "24"$/;"	v
s:darkpurple	vim/colors/hybrid.vim	/^  let s:darkpurple = "#5f005f"$/;"	v
s:darkpurple	vim/colors/hybrid.vim	/^  let s:darkpurple = "53"$/;"	v
s:darkred	vim/colors/hybrid.vim	/^  let s:darkred    = "#5f0000"$/;"	v
s:darkred	vim/colors/hybrid.vim	/^  let s:darkred    = "52"$/;"	v
s:delbg	config/nvim/colors/hybrid.vim	/^  let s:delbg  = s:gb.del$/;"	v
s:fg0	config/nvim/colors/hybrid.vim	/^  let s:fg0 = s:gb.dark0$/;"	v
s:fg0	config/nvim/colors/hybrid.vim	/^  let s:fg0 = s:gb.light0$/;"	v
s:fg1	config/nvim/colors/hybrid.vim	/^  let s:fg1 = s:gb.dark1$/;"	v
s:fg1	config/nvim/colors/hybrid.vim	/^  let s:fg1 = s:gb.light1$/;"	v
s:fg1	config/nvim/colors/hybrid.vim	/^  let s:fg1[1]    = 15$/;"	v
s:fg2	config/nvim/colors/hybrid.vim	/^  let s:fg2 = s:gb.dark2$/;"	v
s:fg2	config/nvim/colors/hybrid.vim	/^  let s:fg2 = s:gb.light2$/;"	v
s:fg3	config/nvim/colors/hybrid.vim	/^  let s:fg3 = s:gb.dark3$/;"	v
s:fg3	config/nvim/colors/hybrid.vim	/^  let s:fg3 = s:gb.light3$/;"	v
s:fg4	config/nvim/colors/hybrid.vim	/^  let s:fg4 = s:gb.dark4$/;"	v
s:fg4	config/nvim/colors/hybrid.vim	/^  let s:fg4 = s:gb.light4$/;"	v
s:fg4	config/nvim/colors/hybrid.vim	/^  let s:fg4[1]    = 7$/;"	v
s:fg4_256	config/nvim/colors/hybrid.vim	/^  let s:fg4_256 = s:gb.dark4_256$/;"	v
s:fg4_256	config/nvim/colors/hybrid.vim	/^  let s:fg4_256 = s:gb.light4_256$/;"	v
s:foreground	vim/colors/hybrid.vim	/^    let s:foreground = "15"   " White$/;"	v
s:foreground	vim/colors/hybrid.vim	/^    let s:foreground = "15"$/;"	v
s:foreground	vim/colors/hybrid.vim	/^    let s:foreground = "250"$/;"	v
s:foreground	vim/colors/hybrid.vim	/^  let s:foreground = "#c5c8c6"$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb = {}$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.add         = ['#5F875F', 0]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.addfg = s:addfg$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.aqua   = s:aqua$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.bg0 = s:bg0$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.bg1 = s:bg1$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.bg2 = s:bg2$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.bg3 = s:bg3$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.bg4 = s:bg4$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.blue   = s:blue$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.bright_aqua    = ['#8abeb7', 108]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.bright_blue    = ['#81a2be', 109]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.bright_green   = ['#b5bd68', 142]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.bright_orange  = ['#de935f', 208]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.bright_purple  = ['#b294bb', 175]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.bright_red     = ['#cc6666', 167]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.bright_yellow  = ['#f0c674', 214]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.change      = ['#5F5F87', 0]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.changefg = s:changefg$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.dark0             = ['#1d1f21',   234]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.dark0_hard        = ['#1d1f21',   234]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.dark0_soft        = ['#1d1f21',   234]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.dark0_transparent = ['#1d1f21f2', 234]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.dark1             = ['#282a2e',   235]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.dark2             = ['#585c63',   239]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.dark3             = ['#707880',   237]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.dark4             = ['#c5c8c6',   250]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.dark4_256         = ['#7c6f64',   243]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.del         = ['#cc6666', 0]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.faded_aqua     = ['#005f5f', 66] $/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.faded_blue     = ['#00005f', 24] $/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.faded_green    = ['#005f00', 100]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.faded_orange   = ['#875f00', 130]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.faded_purple   = ['#5f005f', 96] $/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.faded_red      = ['#5f0000', 88] $/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.faded_yellow   = ['#5f5f00', 136]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.fg0 = s:fg0$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.fg1 = s:fg1$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.fg2 = s:fg2$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.fg3 = s:fg3$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.fg4 = s:fg4$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.fg4_256 = s:fg4_256$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.gray = s:gray$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.gray_244    = ['#707880', 244]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.gray_245    = ['#707880', 245]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.green  = s:green$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.light0      = ['#585c63', 250]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.light0_hard = ['#585c63', 250]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.light0_soft = ['#585c63', 250]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.light1      = ['#c5c8c6', 223]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.light2      = ['#9e9e9e', 250]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.light3      = ['#808080', 248]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.light4      = ['#425059', 246]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.light4_256  = ['#425059', 246]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.neutral_aqua   = ['#8abeb7', 72] $/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.neutral_blue   = ['#81a2be', 66] $/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.neutral_green  = ['#b5bd68', 106]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.neutral_orange = ['#de935f', 166]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.neutral_purple = ['#b294bb', 132]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.neutral_red    = ['#cc6666', 124]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.neutral_yellow = ['#f0c674', 172]$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.orange = s:orange$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.purple = s:purple$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.red    = s:red$/;"	v
s:gb	config/nvim/colors/hybrid.vim	/^let s:gb.yellow = s:yellow$/;"	v
s:gray	config/nvim/colors/hybrid.vim	/^  let s:gray = s:gb.gray_244$/;"	v
s:gray	config/nvim/colors/hybrid.vim	/^  let s:gray = s:gb.gray_245$/;"	v
s:gray	config/nvim/colors/hybrid.vim	/^  let s:gray[1]   = 8$/;"	v
s:green	config/nvim/colors/hybrid.vim	/^  let s:green  = s:gb.bright_green$/;"	v
s:green	config/nvim/colors/hybrid.vim	/^  let s:green  = s:gb.faded_green$/;"	v
s:green	config/nvim/colors/hybrid.vim	/^  let s:green[1]  = 10$/;"	v
s:green	vim/colors/hybrid.vim	/^    let s:green      = "10"   " LightGreen$/;"	v
s:green	vim/colors/hybrid.vim	/^    let s:green      = "143"$/;"	v
s:green	vim/colors/hybrid.vim	/^    let s:green      = "2"$/;"	v
s:green	vim/colors/hybrid.vim	/^  let s:green      = "#b5bd68"$/;"	v
s:hls_cursor	config/nvim/colors/hybrid.vim	/^  let s:hls_cursor = get(s:gb, g:hybrid_hls_cursor)$/;"	v
s:hls_cursor	config/nvim/colors/hybrid.vim	/^let s:hls_cursor = s:orange$/;"	v
s:i	vim/colors/hybrid.vim	/^let s:i      = ",italic"$/;"	v
s:inverse	config/nvim/colors/hybrid.vim	/^  let s:inverse = ''$/;"	v
s:inverse	config/nvim/colors/hybrid.vim	/^let s:inverse = 'inverse,'$/;"	v
s:invert_selection	config/nvim/colors/hybrid.vim	/^    let s:invert_selection = ''$/;"	v
s:invert_selection	config/nvim/colors/hybrid.vim	/^let s:invert_selection = s:inverse$/;"	v
s:invert_signs	config/nvim/colors/hybrid.vim	/^    let s:invert_signs = s:inverse$/;"	v
s:invert_signs	config/nvim/colors/hybrid.vim	/^let s:invert_signs = ''$/;"	v
s:invert_tabline	config/nvim/colors/hybrid.vim	/^    let s:invert_tabline = s:inverse$/;"	v
s:invert_tabline	config/nvim/colors/hybrid.vim	/^let s:invert_tabline = ''$/;"	v
s:is_dark	config/nvim/colors/hybrid.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:italic	config/nvim/colors/hybrid.vim	/^  let s:italic = ''$/;"	v
s:italic	config/nvim/colors/hybrid.vim	/^let s:italic = 'italic,'$/;"	v
s:italicize_comments	config/nvim/colors/hybrid.vim	/^    let s:italicize_comments = ''$/;"	v
s:italicize_comments	config/nvim/colors/hybrid.vim	/^let s:italicize_comments = s:italic$/;"	v
s:italicize_strings	config/nvim/colors/hybrid.vim	/^    let s:italicize_strings = s:italic$/;"	v
s:italicize_strings	config/nvim/colors/hybrid.vim	/^let s:italicize_strings = ''$/;"	v
s:line	vim/colors/hybrid.vim	/^    let s:line       = "0"    " Black$/;"	v
s:line	vim/colors/hybrid.vim	/^    let s:line       = "0"$/;"	v
s:line	vim/colors/hybrid.vim	/^    let s:line       = "235"$/;"	v
s:line	vim/colors/hybrid.vim	/^  let s:line       = "#282a2e"$/;"	v
s:n	vim/colors/hybrid.vim	/^let s:n      = "NONE"$/;"	v
s:none	config/nvim/colors/hybrid.vim	/^let s:none = ['NONE', 'NONE']$/;"	v
s:none	vim/colors/hybrid.vim	/^let s:none   = "NONE"$/;"	v
s:number_column	config/nvim/colors/hybrid.vim	/^  let s:number_column = get(s:gb, g:hybrid_number_column)$/;"	v
s:number_column	config/nvim/colors/hybrid.vim	/^let s:number_column = s:none$/;"	v
s:orange	config/nvim/colors/hybrid.vim	/^  let s:orange = s:gb.bright_orange$/;"	v
s:orange	config/nvim/colors/hybrid.vim	/^  let s:orange = s:gb.faded_orange$/;"	v
s:orange	vim/colors/hybrid.vim	/^    let s:orange     = "173"$/;"	v
s:orange	vim/colors/hybrid.vim	/^    let s:orange     = "3"    " DarkYellow$/;"	v
s:orange	vim/colors/hybrid.vim	/^    let s:orange     = "9"   $/;"	v
s:orange	vim/colors/hybrid.vim	/^  let s:orange     = "#de935f"$/;"	v
s:purple	config/nvim/colors/hybrid.vim	/^  let s:purple = s:gb.bright_purple$/;"	v
s:purple	config/nvim/colors/hybrid.vim	/^  let s:purple = s:gb.faded_purple$/;"	v
s:purple	config/nvim/colors/hybrid.vim	/^  let s:purple[1] = 13$/;"	v
s:purple	vim/colors/hybrid.vim	/^    let s:purple     = "13"   " LightMagenta$/;"	v
s:purple	vim/colors/hybrid.vim	/^    let s:purple     = "139"$/;"	v
s:purple	vim/colors/hybrid.vim	/^    let s:purple     = "5"$/;"	v
s:purple	vim/colors/hybrid.vim	/^  let s:purple     = "#b294bb"$/;"	v
s:r	vim/colors/hybrid.vim	/^let s:r      = ",reverse"$/;"	v
s:red	config/nvim/colors/hybrid.vim	/^  let s:red    = s:gb.bright_red$/;"	v
s:red	config/nvim/colors/hybrid.vim	/^  let s:red    = s:gb.faded_red$/;"	v
s:red	config/nvim/colors/hybrid.vim	/^  let s:red[1]    = 9$/;"	v
s:red	vim/colors/hybrid.vim	/^    let s:red        = "1"   $/;"	v
s:red	vim/colors/hybrid.vim	/^    let s:red        = "167"$/;"	v
s:red	vim/colors/hybrid.vim	/^    let s:red        = "9"    " LightRed$/;"	v
s:red	vim/colors/hybrid.vim	/^  let s:red        = "#cc6666"$/;"	v
s:s	vim/colors/hybrid.vim	/^let s:s      = ",standout"$/;"	v
s:selection	vim/colors/hybrid.vim	/^    let s:selection  = "13"$/;"	v
s:selection	vim/colors/hybrid.vim	/^    let s:selection  = "237"$/;"	v
s:selection	vim/colors/hybrid.vim	/^    let s:selection  = "8"    " DarkGrey$/;"	v
s:selection	vim/colors/hybrid.vim	/^  let s:selection  = "#373b41"$/;"	v
s:sign_column	config/nvim/colors/hybrid.vim	/^    let s:sign_column = get(s:gb, g:hybrid_sign_column)$/;"	v
s:sign_column	config/nvim/colors/hybrid.vim	/^  let s:sign_column = s:number_column$/;"	v
s:sign_column	config/nvim/colors/hybrid.vim	/^let s:sign_column = s:bg0$/;"	v
s:sp_addbg	vim/colors/hybrid.vim	/^  let s:sp_addbg      = ""$/;"	v
s:sp_addfg	vim/colors/hybrid.vim	/^  let s:sp_addfg      = ""$/;"	v
s:sp_aqua	vim/colors/hybrid.vim	/^  let s:sp_aqua       = ""$/;"	v
s:sp_background	vim/colors/hybrid.vim	/^  let s:sp_background = ""$/;"	v
s:sp_blue	vim/colors/hybrid.vim	/^  let s:sp_blue       = ""$/;"	v
s:sp_changebg	vim/colors/hybrid.vim	/^  let s:sp_changebg   = ""$/;"	v
s:sp_changefg	vim/colors/hybrid.vim	/^  let s:sp_changefg   = ""$/;"	v
s:sp_comment	vim/colors/hybrid.vim	/^  let s:sp_comment    = ""$/;"	v
s:sp_darkblue	vim/colors/hybrid.vim	/^  let s:sp_darkblue   = ""$/;"	v
s:sp_darkcyan	vim/colors/hybrid.vim	/^  let s:sp_darkcyan   = ""$/;"	v
s:sp_darkpurple	vim/colors/hybrid.vim	/^  let s:sp_darkpurple = ""$/;"	v
s:sp_darkred	vim/colors/hybrid.vim	/^  let s:sp_darkred    = ""$/;"	v
s:sp_foreground	vim/colors/hybrid.vim	/^  let s:sp_foreground = ""$/;"	v
s:sp_green	vim/colors/hybrid.vim	/^  let s:sp_green      = ""$/;"	v
s:sp_line	vim/colors/hybrid.vim	/^  let s:sp_line       = ""$/;"	v
s:sp_none	vim/colors/hybrid.vim	/^  let s:sp_none       = ""$/;"	v
s:sp_orange	vim/colors/hybrid.vim	/^  let s:sp_orange     = ""$/;"	v
s:sp_purple	vim/colors/hybrid.vim	/^  let s:sp_purple     = ""$/;"	v
s:sp_red	vim/colors/hybrid.vim	/^  let s:sp_red        = ""$/;"	v
s:sp_selection	vim/colors/hybrid.vim	/^  let s:sp_selection  = ""$/;"	v
s:sp_window	vim/colors/hybrid.vim	/^  let s:sp_window     = ""$/;"	v
s:sp_yellow	vim/colors/hybrid.vim	/^  let s:sp_yellow     = ""$/;"	v
s:t_none	vim/colors/hybrid.vim	/^let s:t_none = "NONE"$/;"	v
s:u	vim/colors/hybrid.vim	/^let s:u      = ",underline"$/;"	v
s:undercurl	config/nvim/colors/hybrid.vim	/^  let s:undercurl = ''$/;"	v
s:undercurl	config/nvim/colors/hybrid.vim	/^let s:undercurl = 'undercurl,'$/;"	v
s:underline	config/nvim/colors/hybrid.vim	/^  let s:underline = ''$/;"	v
s:underline	config/nvim/colors/hybrid.vim	/^let s:underline = 'underline,'$/;"	v
s:vert_split	config/nvim/colors/hybrid.vim	/^  let s:vert_split = get(s:gb, g:hybrid_vert_split)$/;"	v
s:vert_split	config/nvim/colors/hybrid.vim	/^let s:vert_split = s:bg0$/;"	v
s:vim_bg	config/nvim/colors/hybrid.vim	/^let s:vim_bg = ['bg', 'bg']$/;"	v
s:vim_fg	config/nvim/colors/hybrid.vim	/^let s:vim_fg = ['fg', 'fg']$/;"	v
s:vmode	vim/colors/hybrid.vim	/^  let s:vmode      = "cterm"$/;"	v
s:vmode	vim/colors/hybrid.vim	/^  let s:vmode      = "gui"$/;"	v
s:window	vim/colors/hybrid.vim	/^  let s:window     = "#303030"$/;"	v
s:window	vim/colors/hybrid.vim	/^  let s:window     = "236"$/;"	v
s:yellow	config/nvim/colors/hybrid.vim	/^  let s:yellow = s:gb.bright_yellow$/;"	v
s:yellow	config/nvim/colors/hybrid.vim	/^  let s:yellow = s:gb.faded_yellow$/;"	v
s:yellow	config/nvim/colors/hybrid.vim	/^  let s:yellow[1] = 11$/;"	v
s:yellow	vim/colors/hybrid.vim	/^    let s:yellow     = "11"   " LightYellow$/;"	v
s:yellow	vim/colors/hybrid.vim	/^    let s:yellow     = "221"$/;"	v
s:yellow	vim/colors/hybrid.vim	/^    let s:yellow     = "3"   $/;"	v
s:yellow	vim/colors/hybrid.vim	/^  let s:yellow     = "#f0c674"$/;"	v
save_copy_buffer	config/ranger/commands_full.py	/^class save_copy_buffer(Command):$/;"	c
scout	config/ranger/commands_full.py	/^class scout(Command):$/;"	c
set_	config/ranger/commands_full.py	/^class set_(Command):$/;"	c
setintag	config/ranger/commands_full.py	/^class setintag(set_):$/;"	c
setlocal	config/ranger/commands_full.py	/^class setlocal(set_):$/;"	c
shell	config/ranger/commands_full.py	/^class shell(Command):$/;"	c
stage	config/ranger/commands_full.py	/^class stage(Command):$/;"	c
stencil	compton.conf	/^glx-no-stencil = true;$/;"	k
style  fg	tmux.conf	/^set-window-option -g window-status-current-style  fg=brightred,bg=default$/;"	k
style bg	tmux.conf	/^set-option -g message-style bg=black,fg=brightred$/;"	k
style bg	tmux.conf	/^set-option -g status-style bg=black,fg=yellow$/;"	k
style fg	tmux.conf	/^set-option -g pane-active-border-style fg=brightgreen$/;"	k
style fg	tmux.conf	/^set-option -g pane-border-style fg=black$/;"	k
style fg	tmux.conf	/^set-window-option -g window-status-style fg=brightblue$/;"	k
style fg	tmux.conf	/^set-window-option -g window-style fg=default,bg=default$/;"	k
t	tmux.conf	/^bind ^A select-pane -t :.+$/;"	k
tab	config/ranger/commands.py	/^    def tab(self, tabnum):$/;"	m	class:my_edit
tab	config/ranger/commands_full.py	/^    def tab(self, tabnum):  # pylint: disable=too-many-return-statements$/;"	m	class:set_
tab	config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:cd
tab	config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:default_linemode
tab	config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:delete
tab	config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:edit
tab	config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:meta
tab	config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:mkdir
tab	config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:open_with
tab	config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:relink
tab	config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:rename
tab	config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:scout
tab	config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:shell
tab	config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:touch
tab	config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:yank
terminal	config/ranger/commands_full.py	/^class terminal(Command):$/;"	c
test#javascript#jest#executable	config/nvim/plug.vim	/^let test#javascript#jest#executable = "yarn test" " Run jest through yarn$/;"	v
tmap	config/ranger/commands_full.py	/^class tmap(map_):$/;"	c
touch	config/ranger/commands_full.py	/^class touch(Command):$/;"	c
tunmap	config/ranger/commands_full.py	/^class tunmap(unmap):$/;"	c
unmap	config/ranger/commands_full.py	/^class unmap(Command):$/;"	c
unmark_tag	config/ranger/commands_full.py	/^class unmark_tag(mark_tag):$/;"	c
unstage	config/ranger/commands_full.py	/^class unstage(Command):$/;"	c
vimrcEx	config/nvim/editor.vim	/^augroup vimrcEx$/;"	a
vimrcEx	vimrc	/^augroup vimrcEx$/;"	a
volume	config/i3blocks/modules/volume	/^volume() {$/;"	f
vsync	compton.conf	/^vsync = "opengl-swc"; $/;"	k
yank	config/ranger/commands_full.py	/^class yank(Command):$/;"	c
